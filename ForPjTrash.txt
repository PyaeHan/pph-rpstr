web.php
------------
// Route::post('/forget-password', [ForgetPasswordController::class, 'submitForgetPasswordForm'])->name('forget.password.post'); 
// Route::get('/reset-password/{token}', [ForgetPasswordController::class, 'showResetPasswordForm'])->name('reset.password.get');
// Route::post('/reset-password', [ForgetPasswordController::class, 'submitResetPasswordForm'])->name('reset.password.post');

Route::get('/new-employee', function () {
    return view('/new-employee/add-new-employee');
});

Route::get('/forget-password', function () {
    return view('/passwords/forget_password');
});

ForgetPasswordController.php
------------------
public function submitForgetPasswordForm(Request $request)
      {
          $request->validate([
              'email' => 'required|email',
          ]);

          $token = Str::random(64);
  
          DB::table('password_resets')->insert([
              'email' => $request->email, 
              'token' => $token, 
              'created_at' => Carbon::now()
            ]);
  
          Mail::send('passwords.verify', ['token' => $token], function($message) use($request){
              $message->to($request->email);
              $message->subject('Reset Password');
          });

          return back()->with('message', 'We have e-mailed your password reset link!');
      }
//end//
public function submitResetPasswordForm(Request $request)
      {
          $request->validate([
              'email' => 'required|email|exists:users',
              'password' => 'required|string|min:6|confirmed',
              'password_confirmation' => 'required'
          ]);

          $updatePassword = DB::table('password_resets')
                              ->where([
                                'email' => $request->email, 
                                'token' => $request->token
                              ])
                              ->first();
  
          if(!$updatePassword){
              return back()->withInput()->with('error', 'Invalid token!');
          }
  
          $user = User::where('email', $request->email)
                      ->update(['password' => Hash::make($request->password)]);
 
          DB::table('password_resets')->where(['email'=> $request->email])->delete();
  
          return redirect('/login')->with('message', 'Your password has been changed!');
      }
//end//
    //   public function showResetPasswordForm($token) { 
    //      return view('passwords.reset-password', ['token' => $token]);
    //   }
//end//
